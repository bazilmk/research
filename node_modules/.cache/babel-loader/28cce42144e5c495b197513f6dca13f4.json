{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tomlaczik/research/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Hint, Treemap } from \"react-vis\";\nimport \"react-vis/dist/style.css\";\nimport \"./App.css\";\nconst data = {\n  children: [{\n    title: \"a\",\n    color: \"red\",\n    size: 1\n  }, {\n    title: \"b\",\n    color: \"blue\",\n    size: 13\n  }, {\n    title: \"c\",\n    color: \"green\",\n    size: 15\n  }, {\n    title: \"d\",\n    color: \"yellow\",\n    size: 156\n  }]\n};\nconst tableColumns = [\"ID\", \"Actual\", \"Predicted\", \"Difference\", \"Neighborhood\", \"LotArea\", \"GrLivArea\", \"FirstFlrSF\"];\nconst tableRows = [[833, 192000, 188383.86, 3616.1381, 1.1818702, 8749, 1459, 1459]];\n\nfunction App() {\n  _s();\n\n  const [selectedRow, setSelectedRow] = useState();\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"mosaic\",\n      children: tableColumns.map((col, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"a\"\n      }, `chart-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"main\",\n      children: [\"Selected row: \", selectedRow, /*#__PURE__*/_jsxDEV(Treemap, {\n        title: \"Test\",\n        width: 500,\n        height: 500,\n        data: data,\n        mode: \"binary\",\n        hideRootNode: true,\n        colorType: \"literal\",\n        margin: 10,\n        padding: 10,\n        onLeafMouseOver: console.log,\n        onLeafMouseOut: console.log,\n        onLeafClick: console.log,\n        children: /*#__PURE__*/_jsxDEV(Hint, {\n          value: 13,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: \"black\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Value of hint\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: tableColumns.map((column, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: column\n            }, `feature-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: tableRows.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: index === selectedRow ? \"selected\" : \"\",\n            onClick: () => setSelectedRow(index),\n            children: row.map((col, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: col\n            }, `cell-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this))\n          }, `row-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"vZiItqkDSHsxkWfm0tjXQpV4p3g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tomlaczik/research/src/App.js"],"names":["useState","Hint","Treemap","data","children","title","color","size","tableColumns","tableRows","App","selectedRow","setSelectedRow","map","col","index","console","log","background","column","row"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { Hint, Treemap } from \"react-vis\";\n\nimport \"react-vis/dist/style.css\";\n\nimport \"./App.css\";\n\nconst data = {\n  children: [\n    { title: \"a\", color: \"red\", size: 1 },\n    { title: \"b\", color: \"blue\", size: 13 },\n    { title: \"c\", color: \"green\", size: 15 },\n    { title: \"d\", color: \"yellow\", size: 156 },\n  ],\n};\n\nconst tableColumns = [\n  \"ID\",\n  \"Actual\",\n  \"Predicted\",\n  \"Difference\",\n  \"Neighborhood\",\n  \"LotArea\",\n  \"GrLivArea\",\n  \"FirstFlrSF\",\n];\n\nconst tableRows = [\n  [833, 192000, 188383.86, 3616.1381, 1.1818702, 8749, 1459, 1459],\n];\n\nfunction App() {\n  const [selectedRow, setSelectedRow] = useState();\n\n  return (\n    <main>\n      <section id=\"mosaic\">\n        {tableColumns.map((col, index) => (\n          <div key={`chart-${index}`}>a</div>\n        ))}\n      </section>\n      <section id=\"main\">\n        Selected row: {selectedRow}\n        <Treemap\n          title={\"Test\"}\n          width={500}\n          height={500}\n          data={data}\n          mode=\"binary\"\n          hideRootNode\n          colorType=\"literal\"\n          margin={10}\n          padding={10}\n          onLeafMouseOver={console.log}\n          onLeafMouseOut={console.log}\n          onLeafClick={console.log}\n        >\n          <Hint value={13}>\n            <div style={{ background: \"black\" }}>\n              <h3>Value of hint</h3>\n            </div>\n          </Hint>\n        </Treemap>\n      </section>\n      <section>\n        <table>\n          <thead>\n            <tr>\n              {tableColumns.map((column, index) => (\n                <th key={`feature-${index}`}>{column}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {tableRows.map((row, index) => (\n              <tr\n                key={`row-${index}`}\n                className={index === selectedRow ? \"selected\" : \"\"}\n                onClick={() => setSelectedRow(index)}\n              >\n                {row.map((col, index) => (\n                  <td key={`cell-${index}`}>{col}</td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </section>\n    </main>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}