{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tomlaczik/research/src/components/GlobalExplanations/GlobalExplanation.js\";\nimport React, { Component } from \"react\";\nimport { FlexibleWidthXYPlot, HorizontalGridLines, LineSeries, MarkSeries, XAxis, YAxis } from \"react-vis\";\n/*const mark = useMemo(() => {\n    return selectedRowIndex\n      ? features.reduce(\n          (markData, feature) => ({\n            ...markData,\n            [feature]: [\n              lineSeriesData[feature].find(\n                (d) => d.x === tableRows[selectedRowIndex][feature]\n              ),\n            ],\n          }),\n          {}\n        )\n      : {};\n  }, [selectedRowIndex]); */\n\nexport class GlobalExplanation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n\n  render() {\n    const {\n      feature\n    } = this.props;\n    const {\n      data\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [feature, JSON.stringify(data), /*#__PURE__*/_jsxDEV(FlexibleWidthXYPlot, {\n        height: 200,\n        children: [/*#__PURE__*/_jsxDEV(HorizontalGridLines, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LineSeries, {\n          color: \"blue\",\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      feature,\n      tableRows\n    } = this.props;\n\n    if (prevProps.feature !== feature || prevProps.tableRows !== tableRows) {\n      console.log(\"new propps\");\n      this.setState({\n        data: tableRows.reduce((previousRows, currentRow) => {\n          const currentX = currentRow[feature];\n          const firstBiggerElementIndex = previousRows.findIndex(previousRow => previousRow.x > currentX);\n          const insertionIndex = firstBiggerElementIndex < 0 ? previousRows.length : firstBiggerElementIndex;\n          return [...previousRows.slice(0, insertionIndex), {\n            x: currentX,\n            y: currentX * Math.random()\n          }, ...previousRows.slice(insertionIndex)];\n        }, [])\n      });\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/tomlaczik/research/src/components/GlobalExplanations/GlobalExplanation.js"],"names":["React","Component","FlexibleWidthXYPlot","HorizontalGridLines","LineSeries","MarkSeries","XAxis","YAxis","GlobalExplanation","constructor","props","state","data","render","feature","JSON","stringify","componentDidUpdate","prevProps","tableRows","console","log","setState","reduce","previousRows","currentRow","currentX","firstBiggerElementIndex","findIndex","previousRow","x","insertionIndex","length","slice","y","Math","random"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,UAHF,EAIEC,UAJF,EAKEC,KALF,EAMEC,KANF,QAOO,WAPP;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,iBAAN,SAAgCP,SAAhC,CAA0C;AAC/CQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKJ,KAAzB;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAW,KAAKD,KAAtB;AACA,wBACE;AAAA,iBACGG,OADH,EAGGC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAHH,eAKE,QAAC,mBAAD;AAAqB,QAAA,MAAM,EAAE,GAA7B;AAAA,gCACE,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AAAY,UAAA,KAAK,EAAC,MAAlB;AAAyB,UAAA,IAAI,EAAEA;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAFF,eAIE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AAEDK,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,UAAM;AAAEJ,MAAAA,OAAF;AAAWK,MAAAA;AAAX,QAAyB,KAAKT,KAApC;;AACA,QAAIQ,SAAS,CAACJ,OAAV,KAAsBA,OAAtB,IAAiCI,SAAS,CAACC,SAAV,KAAwBA,SAA7D,EAAwE;AACtEC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,WAAKC,QAAL,CAAc;AACZV,QAAAA,IAAI,EAAEO,SAAS,CAACI,MAAV,CAAiB,CAACC,YAAD,EAAeC,UAAf,KAA8B;AACnD,gBAAMC,QAAQ,GAAGD,UAAU,CAACX,OAAD,CAA3B;AAEA,gBAAMa,uBAAuB,GAAGH,YAAY,CAACI,SAAb,CAC7BC,WAAD,IAAiBA,WAAW,CAACC,CAAZ,GAAgBJ,QADH,CAAhC;AAIA,gBAAMK,cAAc,GAClBJ,uBAAuB,GAAG,CAA1B,GACIH,YAAY,CAACQ,MADjB,GAEIL,uBAHN;AAKA,iBAAO,CACL,GAAGH,YAAY,CAACS,KAAb,CAAmB,CAAnB,EAAsBF,cAAtB,CADE,EAEL;AACED,YAAAA,CAAC,EAAEJ,QADL;AAEEQ,YAAAA,CAAC,EAAER,QAAQ,GAAGS,IAAI,CAACC,MAAL;AAFhB,WAFK,EAML,GAAGZ,YAAY,CAACS,KAAb,CAAmBF,cAAnB,CANE,CAAP;AAQD,SApBK,EAoBH,EApBG;AADM,OAAd;AAuBD;AACF;;AAzD8C","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  FlexibleWidthXYPlot,\n  HorizontalGridLines,\n  LineSeries,\n  MarkSeries,\n  XAxis,\n  YAxis,\n} from \"react-vis\";\n\n/*const mark = useMemo(() => {\n    return selectedRowIndex\n      ? features.reduce(\n          (markData, feature) => ({\n            ...markData,\n            [feature]: [\n              lineSeriesData[feature].find(\n                (d) => d.x === tableRows[selectedRowIndex][feature]\n              ),\n            ],\n          }),\n          {}\n        )\n      : {};\n  }, [selectedRowIndex]); */\n\nexport class GlobalExplanation extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n    };\n  }\n\n  render() {\n    const { feature } = this.props;\n    const { data } = this.state;\n    return (\n      <div>\n        {feature}\n\n        {JSON.stringify(data)}\n\n        <FlexibleWidthXYPlot height={200}>\n          <HorizontalGridLines />\n          <LineSeries color=\"blue\" data={data} />\n          {/*<MarkSeries color=\"orange\" data={mark[feature]} />*/}\n          <XAxis />\n          <YAxis />\n        </FlexibleWidthXYPlot>\n      </div>\n    );\n  }\n\n  componentDidUpdate(prevProps) {\n    const { feature, tableRows } = this.props;\n    if (prevProps.feature !== feature || prevProps.tableRows !== tableRows) {\n      console.log(\"new propps\");\n      this.setState({\n        data: tableRows.reduce((previousRows, currentRow) => {\n          const currentX = currentRow[feature];\n\n          const firstBiggerElementIndex = previousRows.findIndex(\n            (previousRow) => previousRow.x > currentX\n          );\n\n          const insertionIndex =\n            firstBiggerElementIndex < 0\n              ? previousRows.length\n              : firstBiggerElementIndex;\n\n          return [\n            ...previousRows.slice(0, insertionIndex),\n            {\n              x: currentX,\n              y: currentX * Math.random(),\n            },\n            ...previousRows.slice(insertionIndex),\n          ];\n        }, []),\n      });\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}