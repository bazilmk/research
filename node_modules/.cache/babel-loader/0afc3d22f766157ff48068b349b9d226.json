{"ast":null,"code":"import _objectSpread from\"/Users/tomlaczik/research/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/tomlaczik/research/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/tomlaczik/research/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/tomlaczik/research/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/tomlaczik/research/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/tomlaczik/research/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{Component}from\"react\";import{Treemap}from\"react-vis\";import{Tooltip}from\"..\";import\"./LocalExplanation.css\";export var LocalExplanation=/*#__PURE__*/function(_Component){_inherits(LocalExplanation,_Component);var _super=_createSuper(LocalExplanation);function LocalExplanation(props){var _this;_classCallCheck(this,LocalExplanation);_this=_super.call(this,props);_this.state={dimensions:{width:0,height:0},displayMode:\"resquarify\"};_this.resetTooltipData=_this.resetTooltipData.bind(_assertThisInitialized(_this));_this.updateTooltipData=_this.updateTooltipData.bind(_assertThisInitialized(_this));_this.updateSize=_this.updateSize.bind(_assertThisInitialized(_this));_this.getPositiveChildren=_this.getPositiveChildren.bind(_assertThisInitialized(_this));_this.getNegativeChildren=_this.getNegativeChildren.bind(_assertThisInitialized(_this));_this.getChildren=_this.getChildren.bind(_assertThisInitialized(_this));_this.updateDisplayMode=_this.updateDisplayMode.bind(_assertThisInitialized(_this));return _this;}_createClass(LocalExplanation,[{key:\"render\",value:function render(){var _this2=this;var selectedRowIndex=this.props.selectedRowIndex;var _this$state=this.state,data=_this$state.data,dimensions=_this$state.dimensions,displayMode=_this$state.displayMode,tooltipData=_this$state.tooltipData;return/*#__PURE__*/_jsx(\"section\",{id:\"treemap-container\",ref:this.updateSize,onMouseLeave:this.resetTooltipData,children:selectedRowIndex===undefined?\"Select a row in the table below\":/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Treemap,_objectSpread({title:\"Test\",data:data,mode:displayMode,hideRootNode:true,colorType:\"literal\",onLeafMouseOver:function onLeafMouseOver(_ref){var data=_ref.data;return _this2.updateTooltipData(data);},onLeafClick:function onLeafClick(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return console.log(\"klikk\",[args]);},padding:1,margin:0},dimensions)),/*#__PURE__*/_jsx(Tooltip,{data:tooltipData}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Display mode\",/*#__PURE__*/_jsxs(\"select\",{onChange:this.updateDisplayMode,children:[/*#__PURE__*/_jsx(\"option\",{value:\"resquarify\",children:\"resquarify\"}),/*#__PURE__*/_jsx(\"option\",{value:\"circlePack\",children:\"circlePack\"}),/*#__PURE__*/_jsx(\"option\",{value:\"waterfall\",disabled:true,children:\"waterfall\"})]})]})]})});}},{key:\"resetTooltipData\",value:function resetTooltipData(){this.setState({tooltipData:undefined});}},{key:\"updateTooltipData\",value:function updateTooltipData(data){this.setState({tooltipData:data});}},{key:\"updateSize\",value:function updateSize(containerElement){if(containerElement!==null){var width=containerElement.clientWidth,height=containerElement.clientHeight;this.setState({dimensions:{width:width,height:height}});}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){var selectedRowIndex=this.props.selectedRowIndex;if(selectedRowIndex!==prevProps.selectedRowIndex){this.setState({data:{children:[{title:\"Negative\",children:this.getPositiveChildren(),color:\"none\"},{title:\"Positive\",children:this.getNegativeChildren(),color:\"none\"}]}});}}},{key:\"getPositiveChildren\",value:function getPositiveChildren(){return this.getChildren(true);}},{key:\"getNegativeChildren\",value:function getNegativeChildren(){return this.getChildren(false);}},{key:\"getChildren\",value:function getChildren(returnPositiveChilren){var selectedRowIndex=this.props.selectedRowIndex;if(selectedRowIndex===undefined)return[];var children=[];var selectedRow=this.props.data[selectedRowIndex];var color=returnPositiveChilren?\"#006f3c\":\"#bf212f\";this.props.features.forEach(function(feature){var value=selectedRow[feature];if(!returnPositiveChilren&&value<0||returnPositiveChilren)children.push({title:feature,size:Math.abs(value),color:color});});return children;}},{key:\"updateDisplayMode\",value:function updateDisplayMode(_ref2){var displayMode=_ref2.target.value;this.setState({displayMode:displayMode});}}]);return LocalExplanation;}(Component);","map":{"version":3,"sources":["/Users/tomlaczik/research/src/components/LocalExplanation/LocalExplanation.js"],"names":["React","Component","Treemap","Tooltip","LocalExplanation","props","state","dimensions","width","height","displayMode","resetTooltipData","bind","updateTooltipData","updateSize","getPositiveChildren","getNegativeChildren","getChildren","updateDisplayMode","selectedRowIndex","data","tooltipData","undefined","args","console","log","setState","containerElement","clientWidth","clientHeight","prevProps","children","title","color","returnPositiveChilren","selectedRow","features","forEach","feature","value","push","size","Math","abs","target"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Treemap } from \"react-vis\";\nimport { Tooltip } from \"..\";\n\nimport \"./LocalExplanation.css\";\n\nexport class LocalExplanation extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dimensions: { width: 0, height: 0 },\n      displayMode: \"resquarify\",\n    };\n\n    this.resetTooltipData = this.resetTooltipData.bind(this);\n    this.updateTooltipData = this.updateTooltipData.bind(this);\n    this.updateSize = this.updateSize.bind(this);\n\n    this.getPositiveChildren = this.getPositiveChildren.bind(this);\n    this.getNegativeChildren = this.getNegativeChildren.bind(this);\n    this.getChildren = this.getChildren.bind(this);\n\n    this.updateDisplayMode = this.updateDisplayMode.bind(this);\n  }\n\n  render() {\n    const { selectedRowIndex } = this.props;\n    const { data, dimensions, displayMode, tooltipData } = this.state;\n\n    return (\n      <section\n        id=\"treemap-container\"\n        ref={this.updateSize}\n        onMouseLeave={this.resetTooltipData}\n      >\n        {selectedRowIndex === undefined ? (\n          \"Select a row in the table below\"\n        ) : (\n          <>\n            <Treemap\n              title={\"Test\"}\n              data={data}\n              mode={displayMode}\n              hideRootNode\n              colorType=\"literal\"\n              onLeafMouseOver={({ data }) => this.updateTooltipData(data)}\n              onLeafClick={(...args) => console.log(\"klikk\", [args])}\n              padding={1}\n              margin={0}\n              {...dimensions}\n            />\n            <Tooltip data={tooltipData} />\n            <label>\n              Display mode\n              <select onChange={this.updateDisplayMode}>\n                <option value=\"resquarify\">resquarify</option>\n                <option value=\"circlePack\">circlePack</option>\n                <option value=\"waterfall\" disabled>\n                  waterfall\n                </option>\n              </select>\n            </label>\n          </>\n        )}\n      </section>\n    );\n  }\n\n  resetTooltipData() {\n    this.setState({ tooltipData: undefined });\n  }\n\n  updateTooltipData(data) {\n    this.setState({ tooltipData: data });\n  }\n\n  updateSize(containerElement) {\n    if (containerElement !== null) {\n      const { clientWidth: width, clientHeight: height } = containerElement;\n      this.setState({ dimensions: { width, height } });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { selectedRowIndex } = this.props;\n    if (selectedRowIndex !== prevProps.selectedRowIndex) {\n      this.setState({\n        data: {\n          children: [\n            {\n              title: \"Negative\",\n              children: this.getPositiveChildren(),\n              color: \"none\",\n            },\n            {\n              title: \"Positive\",\n              children: this.getNegativeChildren(),\n              color: \"none\",\n            },\n          ],\n        },\n      });\n    }\n  }\n\n  getPositiveChildren() {\n    return this.getChildren(true);\n  }\n\n  getNegativeChildren() {\n    return this.getChildren(false);\n  }\n\n  getChildren(returnPositiveChilren) {\n    const { selectedRowIndex } = this.props;\n\n    if (selectedRowIndex === undefined) return [];\n\n    const children = [];\n\n    const selectedRow = this.props.data[selectedRowIndex];\n    const color = returnPositiveChilren ? \"#006f3c\" : \"#bf212f\";\n    this.props.features.forEach((feature) => {\n      const value = selectedRow[feature];\n      if ((!returnPositiveChilren && value < 0) || returnPositiveChilren)\n        children.push({ title: feature, size: Math.abs(value), color });\n    });\n    return children;\n  }\n\n  updateDisplayMode({ target: { value: displayMode } }) {\n    this.setState({ displayMode });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}