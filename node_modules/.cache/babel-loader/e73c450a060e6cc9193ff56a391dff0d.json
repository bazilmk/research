{"ast":null,"code":"import _slicedToArray from\"/Users/tomlaczik/research/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useState}from\"react\";import{FlexibleWidthXYPlot,HorizontalGridLines,LineSeries,XAxis,YAxis}from\"react-vis\";import\"react-vis/dist/style.css\";import\"./App.css\";import{TreemapContainer}from\"./components\";var features=[\"LotArea\",\"YearBuilt\",\"GrLivArea\",\"KitchenAbvGr\",\"FirstFlrSF\",\"PoolArea\",\"TotalBsmtSF\",\"BsmtFinSFOne\",\"BsmtUnfSF\",\"GarageYrBlt\",\"EnclosedPorch\",\"WoodDeckSF\",\"MSSubClass\",\"MiscVal\",\"OpenPorchSF\",\"ThreeSsnPorch\",\"YearRemodAdd\",\"YrSold\",\"GarageArea\",\"LowQualFinSF\",\"BsmtFinSFTwo\",\"OverallCond\",\"MoSold\",\"SecondFlrSF\",\"TotRmsAbvGrd\",\"ScreenPorch\",\"Fireplaces\",\"OverallQual\",\"HalfBath\",\"MasVnrArea\",\"GarageCars\",\"LotFrontage\",\"BsmtFullBath\",\"FullBath\",\"BedroomAbvGr\",\"BsmtHalfBath\"];var tableColumns=[\"ID\",\"Actual\",\"Predicted\",\"Difference\"].concat(features);var tableRows=new Array(tableColumns.length).fill(1).map(function(){var row={};tableColumns.forEach(function(tableColumn){return row[tableColumn]=Math.random()*1000-500;});return row;});var lineSeriesData=[];for(var i=0;i<30;++i){lineSeriesData.push({x:i/10,y:(i>0?lineSeriesData[i-1].y:0)+Math.random()*(2^i)});}function App(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),selectedRowIndex=_useState2[0],setSelectedRowIndex=_useState2[1];return/*#__PURE__*/_jsxs(\"main\",{children:[/*#__PURE__*/_jsx(\"section\",{id:\"mosaic\",children:features.map(function(feature,index){return/*#__PURE__*/_jsxs(\"div\",{children:[feature,/*#__PURE__*/_jsxs(FlexibleWidthXYPlot,{height:200,children:[/*#__PURE__*/_jsx(HorizontalGridLines,{}),/*#__PURE__*/_jsx(LineSeries,{color:\"red\",data:lineSeriesData}),/*#__PURE__*/_jsx(XAxis,{}),/*#__PURE__*/_jsx(YAxis,{})]})]},\"chart-\".concat(index));})}),/*#__PURE__*/_jsx(TreemapContainer,{features:features,selectedRowIndex:selectedRowIndex,tableRows:tableRows}),/*#__PURE__*/_jsx(\"section\",{children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(\"tr\",{children:tableColumns.map(function(column,index){return/*#__PURE__*/_jsx(\"th\",{children:column},\"feature-\".concat(index));})})}),/*#__PURE__*/_jsx(\"tbody\",{children:tableRows.map(function(row,index){return/*#__PURE__*/_jsx(\"tr\",{className:index===selectedRowIndex?\"selected\":\"\",onClick:function onClick(){return setSelectedRowIndex(index);},children:tableColumns.map(function(column,index){return/*#__PURE__*/_jsx(\"td\",{children:row[column]},\"feature-\".concat(index));})},\"row-\".concat(index));})})]})})]});}export default App;","map":{"version":3,"sources":["/Users/tomlaczik/research/src/App.js"],"names":["React","useState","FlexibleWidthXYPlot","HorizontalGridLines","LineSeries","XAxis","YAxis","TreemapContainer","features","tableColumns","tableRows","Array","length","fill","map","row","forEach","tableColumn","Math","random","lineSeriesData","i","push","x","y","App","selectedRowIndex","setSelectedRowIndex","feature","index","column"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  FlexibleWidthXYPlot,\n  HorizontalGridLines,\n  LineSeries,\n  XAxis,\n  YAxis,\n} from \"react-vis\";\n\nimport \"react-vis/dist/style.css\";\n\nimport \"./App.css\";\nimport { TreemapContainer } from \"./components\";\n\nconst features = [\n  \"LotArea\",\n  \"YearBuilt\",\n  \"GrLivArea\",\n  \"KitchenAbvGr\",\n  \"FirstFlrSF\",\n  \"PoolArea\",\n  \"TotalBsmtSF\",\n  \"BsmtFinSFOne\",\n  \"BsmtUnfSF\",\n  \"GarageYrBlt\",\n  \"EnclosedPorch\",\n  \"WoodDeckSF\",\n  \"MSSubClass\",\n  \"MiscVal\",\n  \"OpenPorchSF\",\n  \"ThreeSsnPorch\",\n  \"YearRemodAdd\",\n  \"YrSold\",\n  \"GarageArea\",\n  \"LowQualFinSF\",\n  \"BsmtFinSFTwo\",\n  \"OverallCond\",\n  \"MoSold\",\n  \"SecondFlrSF\",\n  \"TotRmsAbvGrd\",\n  \"ScreenPorch\",\n  \"Fireplaces\",\n  \"OverallQual\",\n  \"HalfBath\",\n  \"MasVnrArea\",\n  \"GarageCars\",\n  \"LotFrontage\",\n  \"BsmtFullBath\",\n  \"FullBath\",\n  \"BedroomAbvGr\",\n  \"BsmtHalfBath\",\n];\n\nconst tableColumns = [\"ID\", \"Actual\", \"Predicted\", \"Difference\", ...features];\n\nconst tableRows = new Array(tableColumns.length).fill(1).map(() => {\n  const row = {};\n  tableColumns.forEach(\n    (tableColumn) => (row[tableColumn] = Math.random() * 1000 - 500)\n  );\n  return row;\n});\n\nconst lineSeriesData = [];\nfor (let i = 0; i < 30; ++i) {\n  lineSeriesData.push({\n    x: i / 10,\n    y: (i > 0 ? lineSeriesData[i - 1].y : 0) + Math.random() * (2 ^ i),\n  });\n}\n\nfunction App() {\n  const [selectedRowIndex, setSelectedRowIndex] = useState();\n\n  return (\n    <main>\n      <section id=\"mosaic\">\n        {features.map((feature, index) => (\n          <div key={`chart-${index}`}>\n            {feature}\n\n            <FlexibleWidthXYPlot height={200}>\n              <HorizontalGridLines />\n              <LineSeries color=\"red\" data={lineSeriesData} />\n              <XAxis />\n              <YAxis />\n            </FlexibleWidthXYPlot>\n          </div>\n        ))}\n      </section>\n      <TreemapContainer\n        features={features}\n        selectedRowIndex={selectedRowIndex}\n        tableRows={tableRows}\n      />\n      <section>\n        <table>\n          <thead>\n            <tr>\n              {tableColumns.map((column, index) => (\n                <th key={`feature-${index}`}>{column}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {tableRows.map((row, index) => (\n              <tr\n                key={`row-${index}`}\n                className={index === selectedRowIndex ? \"selected\" : \"\"}\n                onClick={() => setSelectedRowIndex(index)}\n              >\n                {tableColumns.map((column, index) => (\n                  <td key={`feature-${index}`}>{row[column]}</td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </section>\n    </main>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}