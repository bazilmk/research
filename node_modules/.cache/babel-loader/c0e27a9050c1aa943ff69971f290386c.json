{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tomlaczik/research/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useRef, useState } from \"react\";\nimport { Hint, Treemap } from \"react-vis\";\nimport \"react-vis/dist/style.css\";\nimport \"./App.css\";\nconst features = [\"LotArea\", \"YearBuilt\", \"GrLivArea\", \"KitchenAbvGr\", \"FirstFlrSF\", \"PoolArea\", \"TotalBsmtSF\", \"BsmtFinSFOne\", \"BsmtUnfSF\", \"GarageYrBlt\", \"EnclosedPorch\", \"WoodDeckSF\", \"MSSubClass\", \"MiscVal\", \"OpenPorchSF\", \"ThreeSsnPorch\", \"YearRemodAdd\", \"YrSold\", \"GarageArea\", \"LowQualFinSF\", \"BsmtFinSFTwo\", \"OverallCond\", \"MoSold\", \"SecondFlrSF\", \"TotRmsAbvGrd\", \"ScreenPorch\", \"Fireplaces\", \"OverallQual\", \"HalfBath\", \"MasVnrArea\", \"GarageCars\", \"LotFrontage\", \"BsmtFullBath\", \"FullBath\", \"BedroomAbvGr\", \"BsmtHalfBath\"];\nconst tableColumns = [\"ID\", \"Actual\", \"Predicted\", \"Difference\", ...features];\nconst tableRows = new Array(tableColumns.length).fill(1).map(() => new Array(tableColumns.length).fill(1).map(() => Math.random() * 1000 - 500));\n\nfunction App() {\n  _s();\n\n  const [selectedRow, setSelectedRow] = useState();\n  const treeChartData = useMemo(() => ({\n    children: selectedRow === undefined ? [] : tableRows[selectedRow].slice(4).map((column, index) => ({\n      title: features[index + 4],\n      size: Math.abs(column),\n      color: column < 0 ? \"#bf212f\" : \"#006f3c\"\n    }))\n  }), [selectedRow]);\n  const treeMapContainer = useRef(null);\n  const {\n    current: treeMapContainerElement\n  } = treeMapContainer;\n  console.log(treeMapContainerElement ? treeMapContainerElement : \"NONEXISTEND\");\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"mosaic\",\n      children: features.map((feature, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [feature, \" \", index]\n      }, `chart-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"main\",\n      ref: treeMapContainer,\n      children: /*#__PURE__*/_jsxDEV(Treemap, {\n        title: \"Test\",\n        width: 500,\n        height: 500,\n        data: treeChartData,\n        mode: \"circlePack\",\n        hideRootNode: true,\n        colorType: \"literal\",\n        onLeafMouseOver: console.log,\n        onLeafMouseOut: console.log,\n        onLeafClick: console.log,\n        children: /*#__PURE__*/_jsxDEV(Hint, {\n          value: 13,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: \"black\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Value of hint\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: tableColumns.map((column, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: column\n            }, `feature-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: tableRows.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: index === selectedRow ? \"selected\" : \"\",\n            onClick: () => setSelectedRow(index),\n            children: row.map((col, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: col\n            }, `cell-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this))\n          }, `row-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ztg+JqVvfPofq8gFBrLfCMEUiyY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tomlaczik/research/src/App.js"],"names":["React","useMemo","useRef","useState","Hint","Treemap","features","tableColumns","tableRows","Array","length","fill","map","Math","random","App","selectedRow","setSelectedRow","treeChartData","children","undefined","slice","column","index","title","size","abs","color","treeMapContainer","current","treeMapContainerElement","console","log","feature","background","row","col"],"mappings":"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","sourcesContent":["import React, { useMemo, useRef, useState } from \"react\";\nimport { Hint, Treemap } from \"react-vis\";\n\nimport \"react-vis/dist/style.css\";\n\nimport \"./App.css\";\n\nconst features = [\n  \"LotArea\",\n  \"YearBuilt\",\n  \"GrLivArea\",\n  \"KitchenAbvGr\",\n  \"FirstFlrSF\",\n  \"PoolArea\",\n  \"TotalBsmtSF\",\n  \"BsmtFinSFOne\",\n  \"BsmtUnfSF\",\n  \"GarageYrBlt\",\n  \"EnclosedPorch\",\n  \"WoodDeckSF\",\n  \"MSSubClass\",\n  \"MiscVal\",\n  \"OpenPorchSF\",\n  \"ThreeSsnPorch\",\n  \"YearRemodAdd\",\n  \"YrSold\",\n  \"GarageArea\",\n  \"LowQualFinSF\",\n  \"BsmtFinSFTwo\",\n  \"OverallCond\",\n  \"MoSold\",\n  \"SecondFlrSF\",\n  \"TotRmsAbvGrd\",\n  \"ScreenPorch\",\n  \"Fireplaces\",\n  \"OverallQual\",\n  \"HalfBath\",\n  \"MasVnrArea\",\n  \"GarageCars\",\n  \"LotFrontage\",\n  \"BsmtFullBath\",\n  \"FullBath\",\n  \"BedroomAbvGr\",\n  \"BsmtHalfBath\",\n];\n\nconst tableColumns = [\"ID\", \"Actual\", \"Predicted\", \"Difference\", ...features];\n\nconst tableRows = new Array(tableColumns.length)\n  .fill(1)\n  .map(() =>\n    new Array(tableColumns.length).fill(1).map(() => Math.random() * 1000 - 500)\n  );\nfunction App() {\n  const [selectedRow, setSelectedRow] = useState();\n\n  const treeChartData = useMemo(\n    () => ({\n      children:\n        selectedRow === undefined\n          ? []\n          : tableRows[selectedRow].slice(4).map((column, index) => ({\n              title: features[index + 4],\n              size: Math.abs(column),\n              color: column < 0 ? \"#bf212f\" : \"#006f3c\",\n            })),\n    }),\n    [selectedRow]\n  );\n\n  const treeMapContainer = useRef(null);\n\n  const { current: treeMapContainerElement } = treeMapContainer;\n\n  console.log(\n    treeMapContainerElement ? treeMapContainerElement : \"NONEXISTEND\"\n  );\n\n  return (\n    <main>\n      <section id=\"mosaic\">\n        {features.map((feature, index) => (\n          <div key={`chart-${index}`}>\n            {feature} {index}\n          </div>\n        ))}\n      </section>\n      <section id=\"main\" ref={treeMapContainer}>\n        <Treemap\n          title={\"Test\"}\n          width={500}\n          height={500}\n          data={treeChartData}\n          mode=\"circlePack\"\n          hideRootNode\n          colorType=\"literal\"\n          onLeafMouseOver={console.log}\n          onLeafMouseOut={console.log}\n          onLeafClick={console.log}\n        >\n          <Hint value={13}>\n            <div style={{ background: \"black\" }}>\n              <h3>Value of hint</h3>\n            </div>\n          </Hint>\n        </Treemap>\n      </section>\n      <section>\n        <table>\n          <thead>\n            <tr>\n              {tableColumns.map((column, index) => (\n                <th key={`feature-${index}`}>{column}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {tableRows.map((row, index) => (\n              <tr\n                key={`row-${index}`}\n                className={index === selectedRow ? \"selected\" : \"\"}\n                onClick={() => setSelectedRow(index)}\n              >\n                {row.map((col, index) => (\n                  <td key={`cell-${index}`}>{col}</td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </section>\n    </main>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}