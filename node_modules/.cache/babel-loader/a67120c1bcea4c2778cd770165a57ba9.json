{"ast":null,"code":"import _objectSpread from\"/Users/tomlaczik/research/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/tomlaczik/research/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useCallback,useMemo,useState}from\"react\";import{Treemap}from\"react-vis\";import\"react-vis/dist/style.css\";import\"./App.css\";import{Tooltip}from\"./components\";var features=[\"LotArea\",\"YearBuilt\",\"GrLivArea\",\"KitchenAbvGr\",\"FirstFlrSF\",\"PoolArea\",\"TotalBsmtSF\",\"BsmtFinSFOne\",\"BsmtUnfSF\",\"GarageYrBlt\",\"EnclosedPorch\",\"WoodDeckSF\",\"MSSubClass\",\"MiscVal\",\"OpenPorchSF\",\"ThreeSsnPorch\",\"YearRemodAdd\",\"YrSold\",\"GarageArea\",\"LowQualFinSF\",\"BsmtFinSFTwo\",\"OverallCond\",\"MoSold\",\"SecondFlrSF\",\"TotRmsAbvGrd\",\"ScreenPorch\",\"Fireplaces\",\"OverallQual\",\"HalfBath\",\"MasVnrArea\",\"GarageCars\",\"LotFrontage\",\"BsmtFullBath\",\"FullBath\",\"BedroomAbvGr\",\"BsmtHalfBath\"];var tableColumns=[\"ID\",\"Actual\",\"Predicted\",\"Difference\"].concat(features);var tableRows=new Array(tableColumns.length).fill(1).map(function(){var row={};tableColumns.forEach(function(tableColumn){return row[tableColumn]=Math.random()*1000-500;});return row;});function App(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),selectedRowIndex=_useState2[0],setSelectedRowIndex=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),tooltipData=_useState4[0],setTooltipData=_useState4[1];var treeChartData=useMemo(function(){var positiveChildren=[];var negativeChildren=[];if(selectedRowIndex!==undefined){var selectedRow=tableRows[selectedRowIndex];features.forEach(function(feature){var children,color;var value=selectedRow[feature];if(value<0){children=negativeChildren;color=\"#006f3c\";}else{children=positiveChildren;color=\"#bf212f\";}children.push({title:feature,size:Math.abs(value),color:color});});}return{children:[{title:\"Negative\",children:positiveChildren,color:\"none\"},{title:\"Positive\",children:negativeChildren,color:\"none\"}]};},[selectedRowIndex]);var _useState5=useState({width:0,height:0}),_useState6=_slicedToArray(_useState5,2),treeMapDimensions=_useState6[0],setTreeMapDimensions=_useState6[1];var treeMapContainer=useCallback(function(treeMapContainerElement){if(treeMapContainerElement!==null){var width=treeMapContainerElement.clientWidth,height=treeMapContainerElement.clientHeight;setTreeMapDimensions({width:width,height:height});}},[]);return/*#__PURE__*/_jsxs(\"main\",{children:[/*#__PURE__*/_jsx(\"section\",{id:\"mosaic\",children:features.map(function(feature,index){return/*#__PURE__*/_jsx(\"div\",{children:feature},\"chart-\".concat(index));})}),/*#__PURE__*/_jsxs(\"section\",{id:\"main\",ref:treeMapContainer,onMouseLeave:function onMouseLeave(){return setTooltipData();},children:[selectedRowIndex===undefined&&\"Select a row in the table below\",/*#__PURE__*/_jsx(Treemap,_objectSpread({title:\"Test\",data:treeChartData,mode:\"squarify\",hideRootNode:true,colorType:\"literal\",onLeafMouseOver:function onLeafMouseOver(_ref){var data=_ref.data;return setTooltipData(data);},onLeafClick:function onLeafClick(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return console.log(\"klikk\",[args]);},padding:1,margin:0},treeMapDimensions)),/*#__PURE__*/_jsx(Tooltip,{data:tooltipData})]}),/*#__PURE__*/_jsx(\"section\",{children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(\"tr\",{children:tableColumns.map(function(column,index){return/*#__PURE__*/_jsx(\"th\",{children:column},\"feature-\".concat(index));})})}),/*#__PURE__*/_jsx(\"tbody\",{children:tableRows.map(function(row,index){return/*#__PURE__*/_jsx(\"tr\",{className:index===selectedRowIndex?\"selected\":\"\",onClick:function onClick(){return setSelectedRowIndex(index);},children:tableColumns.map(function(column,index){return/*#__PURE__*/_jsx(\"td\",{children:row[column]},\"feature-\".concat(index));})},\"row-\".concat(index));})})]})})]});}export default App;","map":{"version":3,"sources":["/Users/tomlaczik/research/src/App.js"],"names":["React","useCallback","useMemo","useState","Treemap","Tooltip","features","tableColumns","tableRows","Array","length","fill","map","row","forEach","tableColumn","Math","random","App","selectedRowIndex","setSelectedRowIndex","tooltipData","setTooltipData","treeChartData","positiveChildren","negativeChildren","undefined","selectedRow","feature","children","color","value","push","title","size","abs","width","height","treeMapDimensions","setTreeMapDimensions","treeMapContainer","treeMapContainerElement","clientWidth","clientHeight","index","data","args","console","log","column"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useState } from \"react\";\nimport { Treemap } from \"react-vis\";\n\nimport \"react-vis/dist/style.css\";\n\nimport \"./App.css\";\nimport { Tooltip } from \"./components\";\n\nconst features = [\n  \"LotArea\",\n  \"YearBuilt\",\n  \"GrLivArea\",\n  \"KitchenAbvGr\",\n  \"FirstFlrSF\",\n  \"PoolArea\",\n  \"TotalBsmtSF\",\n  \"BsmtFinSFOne\",\n  \"BsmtUnfSF\",\n  \"GarageYrBlt\",\n  \"EnclosedPorch\",\n  \"WoodDeckSF\",\n  \"MSSubClass\",\n  \"MiscVal\",\n  \"OpenPorchSF\",\n  \"ThreeSsnPorch\",\n  \"YearRemodAdd\",\n  \"YrSold\",\n  \"GarageArea\",\n  \"LowQualFinSF\",\n  \"BsmtFinSFTwo\",\n  \"OverallCond\",\n  \"MoSold\",\n  \"SecondFlrSF\",\n  \"TotRmsAbvGrd\",\n  \"ScreenPorch\",\n  \"Fireplaces\",\n  \"OverallQual\",\n  \"HalfBath\",\n  \"MasVnrArea\",\n  \"GarageCars\",\n  \"LotFrontage\",\n  \"BsmtFullBath\",\n  \"FullBath\",\n  \"BedroomAbvGr\",\n  \"BsmtHalfBath\",\n];\n\nconst tableColumns = [\"ID\", \"Actual\", \"Predicted\", \"Difference\", ...features];\n\nconst tableRows = new Array(tableColumns.length).fill(1).map(() => {\n  const row = {};\n  tableColumns.forEach(\n    (tableColumn) => (row[tableColumn] = Math.random() * 1000 - 500)\n  );\n  return row;\n});\n\nfunction App() {\n  const [selectedRowIndex, setSelectedRowIndex] = useState();\n\n  const [tooltipData, setTooltipData] = useState();\n\n  const treeChartData = useMemo(() => {\n    const positiveChildren = [];\n    const negativeChildren = [];\n\n    if (selectedRowIndex !== undefined) {\n      const selectedRow = tableRows[selectedRowIndex];\n      features.forEach((feature) => {\n        let children, color;\n        const value = selectedRow[feature];\n        if (value < 0) {\n          children = negativeChildren;\n          color = \"#006f3c\";\n        } else {\n          children = positiveChildren;\n          color = \"#bf212f\";\n        }\n        children.push({ title: feature, size: Math.abs(value), color });\n      });\n    }\n\n    return {\n      children: [\n        {\n          title: \"Negative\",\n          children: positiveChildren,\n          color: \"none\",\n        },\n        {\n          title: \"Positive\",\n          children: negativeChildren,\n          color: \"none\",\n        },\n      ],\n    };\n  }, [selectedRowIndex]);\n\n  const [treeMapDimensions, setTreeMapDimensions] = useState({\n    width: 0,\n    height: 0,\n  });\n\n  const treeMapContainer = useCallback((treeMapContainerElement) => {\n    if (treeMapContainerElement !== null) {\n      const {\n        clientWidth: width,\n        clientHeight: height,\n      } = treeMapContainerElement;\n      setTreeMapDimensions({ width, height });\n    }\n  }, []);\n\n  return (\n    <main>\n      <section id=\"mosaic\">\n        {features.map((feature, index) => (\n          <div key={`chart-${index}`}>{feature}</div>\n        ))}\n      </section>\n      <section\n        id=\"main\"\n        ref={treeMapContainer}\n        onMouseLeave={() => setTooltipData()}\n      >\n        {selectedRowIndex === undefined && \"Select a row in the table below\"}\n        <Treemap\n          title={\"Test\"}\n          data={treeChartData}\n          mode=\"squarify\"\n          hideRootNode\n          colorType=\"literal\"\n          onLeafMouseOver={({ data }) => setTooltipData(data)}\n          onLeafClick={(...args) => console.log(\"klikk\", [args])}\n          padding={1}\n          margin={0}\n          {...treeMapDimensions}\n        />\n        <Tooltip data={tooltipData} />\n      </section>\n      <section>\n        <table>\n          <thead>\n            <tr>\n              {tableColumns.map((column, index) => (\n                <th key={`feature-${index}`}>{column}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {tableRows.map((row, index) => (\n              <tr\n                key={`row-${index}`}\n                className={index === selectedRowIndex ? \"selected\" : \"\"}\n                onClick={() => setSelectedRowIndex(index)}\n              >\n                {tableColumns.map((column, index) => (\n                  <td key={`feature-${index}`}>{row[column]}</td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </section>\n    </main>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}