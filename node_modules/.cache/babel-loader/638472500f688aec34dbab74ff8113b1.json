{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tomlaczik/research/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"react-vis/dist/style.css\";\nimport \"./App.css\";\nimport { GlobalExplanations, LocalExplanation, Table } from \"./components\";\nconst features = [\"LotArea\", \"YearBuilt\", \"GrLivArea\", \"KitchenAbvGr\", \"FirstFlrSF\", \"PoolArea\", \"TotalBsmtSF\", \"BsmtFinSFOne\", \"BsmtUnfSF\", \"GarageYrBlt\", \"EnclosedPorch\", \"WoodDeckSF\", \"MSSubClass\", \"MiscVal\", \"OpenPorchSF\", \"ThreeSsnPorch\", \"YearRemodAdd\", \"YrSold\", \"GarageArea\", \"LowQualFinSF\", \"BsmtFinSFTwo\", \"OverallCond\", \"MoSold\", \"SecondFlrSF\", \"TotRmsAbvGrd\", \"ScreenPorch\", \"Fireplaces\", \"OverallQual\", \"HalfBath\", \"MasVnrArea\", \"GarageCars\", \"LotFrontage\", \"BsmtFullBath\", \"FullBath\", \"BedroomAbvGr\", \"BsmtHalfBath\"];\nconst data = new Array(features.length).fill(1).map(() => {\n  const row = {};\n  features.forEach(feature => row[feature] = Math.random() * 1000 - 500);\n  return row;\n});\n\nfunction App() {\n  _s();\n\n  const [selectedRowIndex, setSelectedRowIndex] = useState();\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(GlobalExplanations, {\n      data: data,\n      features: features,\n      selectedRowIndex: selectedRowIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LocalExplanation, {\n      data: data,\n      features: features,\n      selectedRowIndex: selectedRowIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      features: features,\n      setSelectedRowIndex: setSelectedRowIndex,\n      selectedRowIndex: selectedRowIndex,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"lK1hKxVtu5nIELN0suz3bUmNYvM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tomlaczik/research/src/App.js"],"names":["React","useState","GlobalExplanations","LocalExplanation","Table","features","data","Array","length","fill","map","row","forEach","feature","Math","random","App","selectedRowIndex","setSelectedRowIndex"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,0BAAP;AAEA,OAAO,WAAP;AACA,SAASC,kBAAT,EAA6BC,gBAA7B,EAA+CC,KAA/C,QAA4D,cAA5D;AAEA,MAAMC,QAAQ,GAAG,CACf,SADe,EAEf,WAFe,EAGf,WAHe,EAIf,cAJe,EAKf,YALe,EAMf,UANe,EAOf,aAPe,EAQf,cARe,EASf,WATe,EAUf,aAVe,EAWf,eAXe,EAYf,YAZe,EAaf,YAbe,EAcf,SAde,EAef,aAfe,EAgBf,eAhBe,EAiBf,cAjBe,EAkBf,QAlBe,EAmBf,YAnBe,EAoBf,cApBe,EAqBf,cArBe,EAsBf,aAtBe,EAuBf,QAvBe,EAwBf,aAxBe,EAyBf,cAzBe,EA0Bf,aA1Be,EA2Bf,YA3Be,EA4Bf,aA5Be,EA6Bf,UA7Be,EA8Bf,YA9Be,EA+Bf,YA/Be,EAgCf,aAhCe,EAiCf,cAjCe,EAkCf,UAlCe,EAmCf,cAnCe,EAoCf,cApCe,CAAjB;AAuCA,MAAMC,IAAI,GAAG,IAAIC,KAAJ,CAAUF,QAAQ,CAACG,MAAnB,EAA2BC,IAA3B,CAAgC,CAAhC,EAAmCC,GAAnC,CAAuC,MAAM;AACxD,QAAMC,GAAG,GAAG,EAAZ;AACAN,EAAAA,QAAQ,CAACO,OAAT,CAAkBC,OAAD,IAAcF,GAAG,CAACE,OAAD,CAAH,GAAeC,IAAI,CAACC,MAAL,KAAgB,IAAhB,GAAuB,GAArE;AACA,SAAOJ,GAAP;AACD,CAJY,CAAb;;AAMA,SAASK,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CjB,QAAQ,EAAxD;AAEA,sBACE;AAAA,4BACE,QAAC,kBAAD;AACE,MAAA,IAAI,EAAEK,IADR;AAEE,MAAA,QAAQ,EAAED,QAFZ;AAGE,MAAA,gBAAgB,EAAEY;AAHpB;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,gBAAD;AACE,MAAA,IAAI,EAAEX,IADR;AAEE,MAAA,QAAQ,EAAED,QAFZ;AAGE,MAAA,gBAAgB,EAAEY;AAHpB;AAAA;AAAA;AAAA;AAAA,YANF,eAWE,QAAC,KAAD;AACE,MAAA,QAAQ,EAAEZ,QADZ;AAEE,MAAA,mBAAmB,EAAEa,mBAFvB;AAGE,MAAA,gBAAgB,EAAED,gBAHpB;AAIE,MAAA,IAAI,EAAEX;AAJR;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAvBQU,G;;KAAAA,G;AAyBT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"react-vis/dist/style.css\";\n\nimport \"./App.css\";\nimport { GlobalExplanations, LocalExplanation, Table } from \"./components\";\n\nconst features = [\n  \"LotArea\",\n  \"YearBuilt\",\n  \"GrLivArea\",\n  \"KitchenAbvGr\",\n  \"FirstFlrSF\",\n  \"PoolArea\",\n  \"TotalBsmtSF\",\n  \"BsmtFinSFOne\",\n  \"BsmtUnfSF\",\n  \"GarageYrBlt\",\n  \"EnclosedPorch\",\n  \"WoodDeckSF\",\n  \"MSSubClass\",\n  \"MiscVal\",\n  \"OpenPorchSF\",\n  \"ThreeSsnPorch\",\n  \"YearRemodAdd\",\n  \"YrSold\",\n  \"GarageArea\",\n  \"LowQualFinSF\",\n  \"BsmtFinSFTwo\",\n  \"OverallCond\",\n  \"MoSold\",\n  \"SecondFlrSF\",\n  \"TotRmsAbvGrd\",\n  \"ScreenPorch\",\n  \"Fireplaces\",\n  \"OverallQual\",\n  \"HalfBath\",\n  \"MasVnrArea\",\n  \"GarageCars\",\n  \"LotFrontage\",\n  \"BsmtFullBath\",\n  \"FullBath\",\n  \"BedroomAbvGr\",\n  \"BsmtHalfBath\",\n];\n\nconst data = new Array(features.length).fill(1).map(() => {\n  const row = {};\n  features.forEach((feature) => (row[feature] = Math.random() * 1000 - 500));\n  return row;\n});\n\nfunction App() {\n  const [selectedRowIndex, setSelectedRowIndex] = useState();\n\n  return (\n    <main>\n      <GlobalExplanations\n        data={data}\n        features={features}\n        selectedRowIndex={selectedRowIndex}\n      />\n      <LocalExplanation\n        data={data}\n        features={features}\n        selectedRowIndex={selectedRowIndex}\n      />\n      <Table\n        features={features}\n        setSelectedRowIndex={setSelectedRowIndex}\n        selectedRowIndex={selectedRowIndex}\n        data={data}\n      />\n    </main>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}